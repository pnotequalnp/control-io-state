-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Stateful Operations with IORefs
--   
--   Using implicit parameters and IORefs to provide a
--   <a>MonadState</a>-like experience.
@package control-io-state
@version 0.1.0.0


-- | <h1>IO State</h1>
--   
--   This module provides a <tt>MonadState</tt>-like interface for
--   <tt>IORef</tt>s with implicit parameters.
module Control.IO.State
type IOState s = ?ioStateRef :: IORef s
runIOState :: MonadIO m => s -> (IOState s => m a) -> m (a, s)
evalIOState :: MonadIO m => s -> (IOState s => m a) -> m a
execIOState :: MonadIO m => s -> (IOState s => m a) -> m s
get :: (IOState s, MonadIO m) => m s
put :: (IOState s, MonadIO m) => s -> m ()
modify :: (IOState s, MonadIO m) => (s -> s) -> m ()
modify' :: (IOState s, MonadIO m) => (s -> s) -> m ()
gets :: (IOState s, MonadIO m) => (s -> a) -> m a
withState :: (IOState s, MonadIO m) => (s -> s) -> m a -> m a
withState' :: (IOState s, MonadIO m) => (s -> s) -> m a -> m a
